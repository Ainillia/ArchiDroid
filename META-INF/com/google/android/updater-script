###############################################################
#     _                _      _  ____               _      _  #
#    / \    _ __  ___ | |__  (_)|  _ \  _ __  ___  (_)  __| | #
#   / _ \  | '__|/ __|| '_ \ | || | | || '__|/ _ \ | | / _` | #
#  / ___ \ | |  | (__ | | | || || |_| || |  | (_) || || (_| | #
# /_/   \_\|_|   \___||_| |_||_||____/ |_|   \___/ |_| \__,_| #
#                                                             #
###############################################################
ui_print(">>> ArchiDroid is now loading...");
sleep (1);
assert(getprop("ro.product.device") == "m0" || getprop("ro.build.product") == "m0" || 
       getprop("ro.product.device") == "i9300" || getprop("ro.build.product") == "i9300" || 
       getprop("ro.product.device") == "GT-I9300" || getprop("ro.build.product") == "GT-I9300");
ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Ready!");
set_progress(0.01);
sleep (2);
ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Unmounting Partitions");
assert(unmount("/system") || ui_print("(system is unmounted already)"));

set_progress(0.03);

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Formatting Partitions");
format("ext4", "EMMC", "/dev/block/mmcblk0p9", "0", "/system");

set_progress(0.06);

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Mounting Partitions");
assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p9", "/system") || ui_print("(system is mounted already)"));

set_progress(0.07);
#package_extract_file("_archidroid/scripts/bash", "/tmp/bash");
#set_perm(0, 0, 0777, "/tmp/bash");

if file_getprop("/tmp/aroma-data/archidroidwipe.prop","wipe") == "yes" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Formatting /data excluding /data/media");
	package_extract_file("_archidroid/scripts/wipe.sh", "/tmp/wipe.sh");
	set_perm(0, 0, 0777, "/tmp/wipe.sh");
	run_program("/tmp/wipe.sh");
endif;

set_progress(0.08);

if file_getprop("/tmp/aroma-data/archidroidwipe.prop","wipe") == "no" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Cleaning cache, dalvik cache and resource cache");
	delete_recursive("/data/dalvik-cache");
	delete_recursive("/dalvik/dalvik-cache");
	delete_recursive("/data/resource-cache");
endif;

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Executing Archi's Scripts");
package_extract_file("_archidroid/scripts/archidroid.sh", "/tmp/archidroid.sh");
set_perm(0, 0, 0777, "/tmp/archidroid.sh");
run_program("/tmp/archidroid.sh");

if file_getprop("/tmp/aroma-data/archidroidwipe.prop","wipe") == "yes" then
	ui_print("<b><#ff0000>RunOnce</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>$</#></b> Install Mode Detected");
	package_extract_file("_archidroid/scripts/archidroid_install.sh", "/tmp/archidroid_install.sh");
	set_perm(0, 0, 0777, "/tmp/archidroid_install.sh");
	run_program("/tmp/archidroid_install.sh");
else
	if file_getprop("/tmp/aroma-data/archidroidwipe.prop","force") == "no" then
		ui_print("<b><#ff0000>RunOnce</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>$</#></b> Update Mode Detected");
		package_extract_file("_archidroid/scripts/archidroid_update.sh", "/tmp/archidroid_update.sh");
		set_perm(0, 0, 0777, "/tmp/archidroid_update.sh");
		run_program("/tmp/archidroid_update.sh");
	else
		ui_print("<b><#ff0000>RunOnce</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>$</#></b> Forced Update Mode Detected");
		package_extract_file("_archidroid/scripts/archidroid_update.sh", "/tmp/archidroid_update.sh");
		set_perm(0, 0, 0777, "/tmp/archidroid_update.sh");
		run_program("/tmp/archidroid_update.sh", "force");
	endif;
endif;

set_progress(0.09);

set_progress(0.1);

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing ArchiDroid Core");
show_progress(0.4, 3264);
package_extract_dir("system", "/system");

run_program("/sbin/sync");

set_progress(0.51);

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Creating symlinks");
symlink("mksh", "/system/bin/sh");
symlink("toolbox", "/system/bin/date");
symlink("toolbox", "/system/bin/route");
symlink("toolbox", "/system/bin/ln");
symlink("toolbox", "/system/bin/renice");
symlink("toolbox", "/system/bin/md5");
symlink("toolbox", "/system/bin/stop");
symlink("toolbox", "/system/bin/ioctl");
symlink("toolbox", "/system/bin/ionice");
symlink("toolbox", "/system/bin/rm");
symlink("toolbox", "/system/bin/getsebool");
symlink("toolbox", "/system/bin/du");
symlink("toolbox", "/system/bin/setsebool");
symlink("toolbox", "/system/bin/lsmod");
symlink("toolbox", "/system/bin/iftop");
symlink("toolbox", "/system/bin/setenforce");
symlink("toolbox", "/system/bin/cat");
symlink("toolbox", "/system/bin/id");
symlink("toolbox", "/system/bin/ps");
symlink("toolbox", "/system/bin/nandread");
symlink("toolbox", "/system/bin/getevent");
symlink("toolbox", "/system/bin/df");
symlink("toolbox", "/system/bin/setprop");
symlink("toolbox", "/system/bin/kill");
symlink("toolbox", "/system/bin/mount");
symlink("toolbox", "/system/bin/chown");
symlink("toolbox", "/system/bin/insmod");
symlink("toolbox", "/system/bin/wipe");
symlink("toolbox", "/system/bin/cp");
symlink("toolbox", "/system/bin/rmmod");
symlink("toolbox", "/system/bin/setconsole");
symlink("toolbox", "/system/bin/chmod");
symlink("toolbox", "/system/bin/restorecon");
symlink("toolbox", "/system/bin/rmdir");
symlink("toolbox", "/system/bin/notify");
symlink("toolbox", "/system/bin/ifconfig");
symlink("toolbox", "/system/bin/watchprops");
symlink("toolbox", "/system/bin/sync");
symlink("toolbox", "/system/bin/dd");
symlink("toolbox", "/system/bin/reboot");
symlink("toolbox", "/system/bin/runcon");
symlink("toolbox", "/system/bin/start");
symlink("toolbox", "/system/bin/load_policy");
symlink("toolbox", "/system/bin/top");
symlink("toolbox", "/system/bin/lsof");
symlink("toolbox", "/system/bin/dmesg");
symlink("toolbox", "/system/bin/clear");
symlink("toolbox", "/system/bin/umount");
symlink("toolbox", "/system/bin/uptime");
symlink("toolbox", "/system/bin/cmp");
symlink("toolbox", "/system/bin/hd");
symlink("toolbox", "/system/bin/printenv");
symlink("toolbox", "/system/bin/vmstat");
symlink("toolbox", "/system/bin/sleep");
symlink("toolbox", "/system/bin/getprop");
symlink("toolbox", "/system/bin/mkdir");
symlink("toolbox", "/system/bin/ls");
symlink("toolbox", "/system/bin/sendevent");
symlink("toolbox", "/system/bin/touch");
symlink("toolbox", "/system/bin/netstat");
symlink("toolbox", "/system/bin/schedtop");
symlink("toolbox", "/system/bin/mv");
symlink("toolbox", "/system/bin/smd");
symlink("toolbox", "/system/bin/getenforce");
symlink("toolbox", "/system/bin/chcon");
symlink("toolbox", "/system/bin/newfs_msdos");
symlink("toolbox", "/system/bin/log");
symlink("toolbox", "/system/bin/grep");

symlink("/system/xbin/busybox", "/system/bin/busybox");
symlink("/system/xbin/su", "/system/bin/su");
		
set_progress(0.52);

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing ArchiDroid Init Scripts");
### IMPORTANT ###
package_extract_dir("_archidroid/auto", "/");
### IMPORTANT ###

set_progress(0.53);

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Setting Permissions");
set_perm_recursive(0, 0, 0755, 0644, "/system");
set_perm_recursive(0, 0, 0777, 0777, "/system/etc/init.d");
set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
set_perm(0, 3003, 06755, "/system/bin/ip");
set_perm(0, 3003, 02750, "/system/bin/netcfg");
set_perm(0, 3004, 02755, "/system/bin/ping");
set_perm(0, 2000, 06750, "/system/bin/run-as");
set_perm_recursive(1002, 1002, 0755, 0440, "/system/etc/bluetooth");
set_perm(0, 0, 0755, "/system/etc/bluetooth");
set_perm(1000, 1000, 0640, "/system/etc/bluetooth/auto_pair_devlist.conf");
set_perm(1002, 1002, 0440, "/system/etc/dbus.conf");
set_perm(1014, 2000, 0550, "/system/etc/dhcpcd/dhcpcd-run-hooks");
set_perm(0, 2000, 0550, "/system/etc/init.goldfish.sh");
set_perm_recursive(0, 0, 0755, 0555, "/system/etc/ppp");
set_perm_recursive(0, 2000, 0755, 0644, "/system/vendor");
set_perm_recursive(0, 2000, 0755, 0644, "/system/vendor/etc");
set_perm_recursive(0, 0, 0755, 0644, "/system/vendor/firmware");
set_perm(0, 2000, 0755, "/system/vendor/firmware");
set_perm(0, 2000, 0755, "/system/vendor/lib");
set_perm(0, 2000, 0755, "/system/vendor/lib/hw");
set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
set_perm(0, 1000, 0755, "/system/xbin/busybox");

set_perm(0, 0, 06755, "/system/xbin/su");
set_perm(0, 0, 06755, "/system/xbin/daemonsu");
set_perm(0, 0, 0755, "/system/etc/install-recovery.sh");

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Busybox");
run_program("/system/xbin/busybox", "--install", "-s", "/system/xbin");

set_progress(0.54);


##############
### KERNEL ###
##############

# We need to make sure that current kernel is Stock-based to prevent random zygote kernel panics
ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Cleaning Old Kernel");
package_extract_file("boot.img", "/dev/block/mmcblk0p5");

### BOEFFLA ###
if file_getprop("/tmp/aroma-data/archidroid.prop","kernel") == "boeffla" then
  ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing Boeffla Kernel");
  delete_recursive("/system/lib/modules");
  #package_extract_dir("_archidroid/kernels/boeffla/system", "/system");
  package_extract_dir("_archidroid/kernels/boeffla/data", "/data");
  package_extract_dir("_archidroid/kernels/boeffla/presetseditable", "/");
  package_extract_file("_archidroid/kernels/boeffla/boot.img", "/tmp/boeffla.img");
  write_raw_image("/tmp/boeffla.img", "/dev/block/mmcblk0p5");
  delete("/tmp/boeffla.img");
  
  if file_getprop("/tmp/aroma-data/archidroidboeffla.prop","preset") == "archiperformance" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid Performance kernel preset");
		package_extract_dir("_archidroid/kernels/boeffla/presets/archi_performance", "/data/.boeffla");
	endif;
  if file_getprop("/tmp/aroma-data/archidroidboeffla.prop","preset") == "archipowersave" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid PowerSave kernel preset");
		package_extract_dir("_archidroid/kernels/boeffla/presets/archi", "/data/.boeffla");
	endif;
  if file_getprop("/tmp/aroma-data/archidroidboeffla.prop","preset") == "archiultrapowersave" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid UltraPowerSave kernel preset");
		package_extract_dir("_archidroid/kernels/boeffla/presets/archi_ultrapowersave", "/data/.boeffla");
	endif;
endif;

### YANK ###
if file_getprop("/tmp/aroma-data/archidroid.prop","kernel") == "yank" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing Yank555.lu Kernel");
    package_extract_dir("_archidroid/kernels/yank/system", "/system");
	set_perm(0, 2000, 0755, "/system/etc/init.kernel.sh");
	package_extract_file("_archidroid/kernels/yank/boot.img", "/tmp/yank.img");
    write_raw_image("/tmp/yank.img", "/dev/block/mmcblk0p5");
    delete("/tmp/yank.img");
endif;

### GOOGY-MAX ###
if file_getprop("/tmp/aroma-data/archidroid.prop","kernel") == "googy" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing Googy-Max Kernel");
	package_extract_file("_archidroid/kernels/googymax/boot.img", "/tmp/googymax.img");
    write_raw_image("/tmp/googymax.img", "/dev/block/mmcblk0p5");
    delete("/tmp/googymax.img");

	if file_getprop("/tmp/aroma-data/archidroidwipe.prop","wipe") == "yes" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid Googy Max Preset");
		package_extract_dir("_archidroid/kernels/googymax/preset", "/data/.googy");
	endif;

	package_extract_dir("_archidroid/apps/stweaks", "/");
endif;

### STOCK CM ###
if file_getprop("/tmp/aroma-data/archidroid.prop","kernel") == "stock" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing Stock Kernel");
	
	# Not needed since zygote kernel panic fix
    #package_extract_file("boot.img", "/tmp/stock.img");
    #write_raw_image("/tmp/stock.img", "/dev/block/mmcblk0p5");
    #delete("/tmp/stock.img");
endif;

set_progress(0.55);


###############################
### ArchiDroid Audio Tweaks ###
###############################

### Presets for non-boeffla kernels, yet with boeffla sound engine ###
if file_getprop("/tmp/aroma-data/archidroid.prop","kernel") == "yank" || file_getprop("/tmp/aroma-data/archidroid.prop","kernel") == "googy" then
  if file_getprop("/tmp/aroma-data/archidroidboefflasound.prop","boeffla") == "yesarchi" then
    ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Boeffla SC with Archi's Audiophile preset");
    package_extract_dir("_archidroid/apps/boeffla", "/");
    package_extract_dir("_archidroid/presets/boeffla", "/");
  endif;	
  if file_getprop("/tmp/aroma-data/archidroidboefflasound.prop","boeffla") == "yes" then
      ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Boeffla SC");
      package_extract_dir("_archidroid/apps/boeffla/system/app", "/system/app");
  endif;
endif;


#############
### THEME ###
#############

if file_getprop("/tmp/aroma-data/archidroid.prop","theme") == "foxhound" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing FoxHound All Black Theme");
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Notice: This can take up to 5 minutes!");
	package_extract_dir("_archidroid/themes/foxhound", "/sdcard/vrtheme");
	package_extract_dir("_archidroid/themes/vrtheme", "/sdcard/vrtheme");
	set_perm(0, 0, 0755, "/sdcard/vrtheme/installtheme.sh");
	set_perm(0, 0, 0755, "/sdcard/vrtheme/zip");
	set_perm(0, 0, 0755, "/sdcard/vrtheme/cleanup.sh");
	set_perm(0, 0, 0755, "/sdcard/vrtheme/zipalign");
	run_program("/sdcard/vrtheme/installtheme.sh");
	run_program("/sdcard/vrtheme/cleanup.sh");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","theme") == "stock" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Stock Theme");
	# Not needed, haha!
endif;

set_progress(0.68);


###########
### DPI ###
###########

### 240 ###
if file_getprop("/tmp/aroma-data/archidroid.prop","dpi") == "240" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying 240 DPI");
	package_extract_file("_archidroid/dpi/240dpi.sh", "/tmp/240dpi.sh");
	set_perm(0, 0, 0777, "/tmp/240dpi.sh");
	run_program("/tmp/240dpi.sh");
endif;
	
### 280 ###
if file_getprop("/tmp/aroma-data/archidroid.prop","dpi") == "280" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying 280 DPI");
	package_extract_file("_archidroid/dpi/280dpi.sh", "/tmp/280dpi.sh");
	set_perm(0, 0, 0777, "/tmp/280dpi.sh");
	run_program("/tmp/280dpi.sh");
endif;

### 320 ###
if file_getprop("/tmp/aroma-data/archidroid.prop","dpi") == "320" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying 320 DPI");
	package_extract_file("_archidroid/dpi/320dpi.sh", "/tmp/320dpi.sh");
	set_perm(0, 0, 0777, "/tmp/320dpi.sh");
	run_program("/tmp/320dpi.sh");
endif;

set_progress(0.69);

#############
### MODEM ###
#############

package_extract_file("_archidroid/modem/flash_image", "/tmp/flash_image");
set_perm(0, 0, 0777, "/tmp/flash_image");

if file_getprop("/tmp/aroma-data/archidroid.prop","updatemodem") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing XXUGMJ9 Modem");
	assert(package_extract_file("_archidroid/modem/modem.bin", "/tmp/modem.bin"),
	run_program("/tmp/flash_image", "/dev/block/mmcblk0p7", "/tmp/modem.bin"),
	delete("/tmp/modem.bin"));
endif;

delete("/tmp/flash_image");

set_progress(0.70);


##############
### XPOSED ###
##############

if file_getprop("/tmp/aroma-data/archidroid.prop","xposed") == "1" then

	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Including Xposed Framework");
	run_program("/sbin/busybox","cp","-f","/system/bin/app_process","/system/bin/app_process.orig");
	set_perm(0, 2000, 0755, "/system/bin/app_process.orig");
	package_extract_dir("_archidroid/apps/xposed/xposed", "/");
	
	if file_getprop("/tmp/aroma-data/archidroidxposed.prop","appsettings") == "1" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Including App Settings Xposed Module");
		package_extract_dir("_archidroid/apps/xposed/appsettings", "/");
	endif;
	if file_getprop("/tmp/aroma-data/archidroidxposed.prop","xprivacy") == "1" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Including XPrivacy Xposed Module");
		package_extract_dir("_archidroid/apps/xposed/xprivacy", "/");
	endif;
	if file_getprop("/tmp/aroma-data/archidroidxposed.prop","wanam") == "1" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Including Wanam's Xposed Module");
		package_extract_dir("_archidroid/apps/xposed/wanam", "/");
	endif;
	
endif;

set_progress(0.71);


################
### RECOVERY ###
################

### PHILZ ###
if file_getprop("/tmp/aroma-data/archidroid.prop","updaterecovery") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing PhilZ Recovery");
	assert(package_extract_file("recovery.img", "/tmp/recovery.img"),
	write_raw_image("/tmp/recovery.img", "/dev/block/mmcblk0p6"));
endif;

set_progress(0.72);


###########
### OTA ###
###########

if file_getprop("/tmp/aroma-data/archidroid.prop","archidroidota") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid OTA");
	package_extract_file("_archidroid/ota/ota.sh", "/tmp/ota.sh");
	set_perm(0, 0, 0777, "/tmp/ota.sh");
	run_program("/tmp/ota.sh");
	package_extract_dir("_archidroid/ota/app", "/");
endif;

set_progress(0.73);


################
### KEYBOARD ###
################

### TOUCHPAL ###
if file_getprop("/tmp/aroma-data/archidroid.prop","keyboard") == "touchpal" then
	delete("/system/app/SamsungIME.apk");
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing TouchPal Keyboard");
	package_extract_dir("_archidroid/apps/touchpal", "/");
endif;

### HACKERS ###
if file_getprop("/tmp/aroma-data/archidroid.prop","keyboard") == "hackers" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Hacker's Keyboard");
	delete("/system/app/SamsungIME.apk");
	package_extract_dir("_archidroid/apps/hackers", "/");
endif;

### BOTH ###
if file_getprop("/tmp/aroma-data/archidroid.prop","keyboard") == "both" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing TouchPal + Hacker's Keyboard");
	delete("/system/app/SamsungIME.apk");
	package_extract_dir("_archidroid/apps/touchpal", "/");
	package_extract_dir("_archidroid/apps/hackers", "/");
endif;

### STOCK ###
if file_getprop("/tmp/aroma-data/archidroid.prop","keyboard") == "stock" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Stock Keyboard");
	# Not needed, haha!
endif;

### NONE ###
if file_getprop("/tmp/aroma-data/archidroid.prop","keyboard") == "none" then
	# Just delete LatinIME then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Skipping Keyboard");
	delete("/system/app/SamsungIME.apk");
endif;

set_progress(0.74);


################
### LAUNCHER ###
################

### NOVA ###
if file_getprop("/tmp/aroma-data/archidroid.prop","launcher") == "nova" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Nova Launcher");
	delete("/system/app/SecLauncher2.apk");
	package_extract_dir("_archidroid/apps/nova", "/");
endif;

### STOCK ###
if file_getprop("/tmp/aroma-data/archidroid.prop","launcher") == "stock" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Stock Launcher");
	# Not needed, haha!
endif;

### NONE ###
if file_getprop("/tmp/aroma-data/archidroid.prop","launcher") == "none" then
	# Just delete Trebuchet then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Skipping Launcher");
	delete("/system/app/SecLauncher2.apk");
endif;

set_progress(0.75);


#####################
### BOOTANIMATION ###
#####################

if file_getprop("/tmp/aroma-data/archidroid.prop","bootanimation") == "archi" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid Bootanimation");
	delete("/system/media/audio/ui/PowerOn.ogg");
	package_extract_dir("_archidroid/bootanimations/archi", "/");
	package_extract_file("_archidroid/bootanimations/bootanimation", "/system/bin/bootanimation");
	set_perm(0, 2000, 0755, "/system/bin/bootanimation");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","bootanimation") == "archilegacy" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid Legacy Bootanimation");
	delete("/system/media/audio/ui/PowerOn.ogg");
	package_extract_dir("_archidroid/bootanimations/archilegacy", "/");
	package_extract_file("_archidroid/bootanimations/bootanimation", "/system/bin/bootanimation");
	set_perm(0, 2000, 0755, "/system/bin/bootanimation");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","bootanimation") == "logcat" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying Logcat Bootanimation");
	delete("/system/media/audio/ui/PowerOn.ogg");
	package_extract_dir("_archidroid/bootanimations/logcat", "/");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
	set_perm(0, 0, 06755, "/system/bin/boot-dmesg");
	delete("/system/media/bootanimation.zip");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","bootanimation") == "stock" then
  ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying Stock Bootanimation");
  # Not needed, haha!
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","bootanimation") == "none" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Disabling Bootanimation");
	delete("/system/media/audio/ui/PowerOn.ogg");
	package_extract_file("_archidroid/bootanimations/none/disablebootanim.sh", "/tmp/disablebootanim.sh");
	set_perm(0, 0, 0777, "/tmp/disablebootanim.sh");
	run_program("/tmp/disablebootanim.sh");
	delete ("/tmp/disablebootanim.sh");
	delete("/system/media/bootanimation.zip");
endif;

set_progress(0.76);


##############
### TWEAKS ###
##############

### ArchiDroid Tweaks ###
ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid Tweaks");

if file_getprop("/tmp/aroma-data/archidroid.prop","hdvoice") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying HD Voice Tweak");
	package_extract_dir("_archidroid/tweaks/hdvoice", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","buildtweaks") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying build.prop Tweaks");
	package_extract_file("_archidroid/tweaks/build.prop/tweaks.sh", "/tmp/tweaks.sh");
	set_perm(0, 0, 0777, "/tmp/tweaks.sh");
	run_program("/tmp/tweaks.sh");
	delete("/tmp/tweaks.sh");
	if file_getprop("/tmp/aroma-data/archidroidbuild.prop","fastdormancy") == "0" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Disabling Fast Dormancy");
		package_extract_file("_archidroid/tweaks/build.prop/fdOFF.sh", "/tmp/fdOFF.sh");
		set_perm(0, 0, 0777, "/tmp/fdOFF.sh");
		run_program("/tmp/fdOFF.sh");
		delete("/tmp/fdOFF.sh");
	endif;
	if file_getprop("/tmp/aroma-data/archidroidbuild.prop","zerowakeup") == "1" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Enabling ZeroWakeUp");
		package_extract_file("_archidroid/tweaks/build.prop/zerowakeupON.sh", "/tmp/zerowakeupON.sh");
		set_perm(0, 0, 0777, "/tmp/zerowakeupON.sh");
		run_program("/tmp/zerowakeupON.sh");
		delete("/tmp/zerowakeupON.sh");
	endif;
endif;

set_progress(0.77);


#############
### GAPPS ###
#############

set_progress(0.85);

if file_getprop("/tmp/aroma-data/archidroid.prop","gcalendar") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Calendar");
	delete("/system/app/SecCalendar.apk");
	package_extract_dir("_archidroid/apps/gcalendar", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","gchrome") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Chrome");
	package_extract_dir("_archidroid/apps/gchrome", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","gkeep") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Keep");
	package_extract_dir("_archidroid/apps/gkeep", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","gmail") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Mail");
	package_extract_dir("_archidroid/apps/gmail", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","gmaps") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Maps");
	package_extract_dir("_archidroid/apps/gmaps", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","gvoice") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Voice");
	package_extract_dir("_archidroid/apps/gvoice", "/");
	delete("/system/app/VoiceSearchStub.apk");
	delete("/system/app/GoogleSearchWidget.apk");
	delete("/system/app/QuickSearchBox.apk");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","ghangouts") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Hangouts");
	package_extract_dir("_archidroid/apps/ghangouts", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","gplus") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Plus");
	package_extract_dir("_archidroid/apps/gplus", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","gtranslate") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Translate");
	package_extract_dir("_archidroid/apps/gtranslate", "/");
endif;

set_progress(0.86);
	
	
############
### APPS ###
############

if file_getprop("/tmp/aroma-data/archidroid.prop","titaniumbackup") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Titanium Backup");
	package_extract_dir("_archidroid/apps/titaniumbackup", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","greenify") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Greenify");
	package_extract_dir("_archidroid/apps/greenify", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","lmt") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing LMT");
	package_extract_dir("_archidroid/apps/lmt", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","mxplayer") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing MXPlayer");
	package_extract_dir("_archidroid/apps/mxplayer", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","spiritfm") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Spirit FM");
	package_extract_dir("_archidroid/apps/spiritfm", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","bbs") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing BetterBatteryStats");
	package_extract_dir("_archidroid/apps/betterbatterystats", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","cooltool") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing CoolTool");
	package_extract_dir("_archidroid/apps/cooltool", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","rootbrowser") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Root Browser");
	package_extract_dir("_archidroid/apps/rootbrowser", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","adobeflash") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Adobe Flash Player");
	package_extract_dir("_archidroid/apps/adobeflash", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","youtube") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing YouTube");
	package_extract_dir("_archidroid/apps/youtube", "/");
endif;

if file_getprop("/tmp/aroma-data/archidroid.prop","facebook") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Facebook");
	package_extract_dir("_archidroid/apps/facebook", "/");
endif;

set_progress(0.90);


# One more fix to logcat
ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Syncing System");
#set_perm(1000, 1000, 0771, "/data");
#set_perm_recursive(1000, 1000, 0771, 0644, "/data/app");
#set_perm_recursive(0, 0, 0771, 0660, "/data/data");
run_program("/sbin/sync");

set_progress(0.92);


####################
### CROSSBREADER ###
####################

if file_getprop("/tmp/aroma-data/archidroid.prop","crossbreeder") == "1" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing CrossBreeder");
	
	# Freeze Fix
	unmount("/system");
	#unmount("/data");

	package_extract_dir("_archidroid/crossbreeder/setup", "/tmp"); 

	set_perm_recursive(0, 0, 0755, 0755, "/tmp");
	run_program("/sbin/busybox","chmod","-R","0755","/tmp");
	run_program("/sbin/busybox","chown","-R","0.0","/tmp");
	set_perm(0, 0, 0755, "/tmp/busybox");
	run_program("/tmp/busybox","chmod","-R","0755","/tmp");
	run_program("/tmp/busybox","chown","-R","0.0","/tmp");
	run_program("/tmp/busybox","mount","/system");
	run_program("/sbin/busybox","mount","/system");
	run_program("/tmp/busybox","mount","-o","rw,remount","/system");
	run_program("/sbin/busybox","mount","-o","rw,remount","/system");
	run_program("/tmp/busybox","mount","/data");
	run_program("/sbin/busybox","mount","/data");
	run_program("/tmp/busybox","mount","-o","rw,remount","/data");
	run_program("/sbin/busybox","mount","-o","rw,remount","/data");

	run_program("/tmp/busybox","rm","-fr","/system/etc/CrossBreeder");

	run_program("/tmp/busybox","mkdir","-p","/system/etc/CrossBreeder");
	run_program("/tmp/busybox","cp","-f","/tmp/tune2fs","/system/etc/CrossBreeder");
	#run_program("/tmp/busybox","cp","-f","/tmp/libiconv.so.2","/system/etc/CrossBreeder");
	run_program("/tmp/busybox","cp","-f","/tmp/busybox","/system/etc/CrossBreeder");
	set_perm_recursive(0, 0, 0755, 0755, "/system/etc/CrossBreeder");
	run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder");
	run_program("/tmp/busybox","chmod","-R","0755","/system/etc/CrossBreeder");

	run_program("/tmp/busybox", "echo", "Restore", "started.");
	run_program("/tmp/restore_dnsmasq.sh");
	run_program("/tmp/busybox","echo","After","Restore");
	#run_program("/tmp/busybox","mv","-f","/system/etc/hosts","/system/etc/hosts.CBBAK");
	package_extract_dir("_archidroid/crossbreeder/system", "/system");
	run_program("/tmp/busybox","cp","-f","/tmp/recovery.log","/data/recovery_cb.log");
	#run_program("/tmp/busybox","cp","-f","/system/etc/CrossBreeder/dnsmasq","/system/bin/dnsmasq.bin");
	delete("/system/bin/dnsmasq.bin");
	run_program("/tmp/busybox", "ls", "-l", "/system/bin/dnsmasq");; 
	set_perm_recursive(0, 0, 0755, 0755, "/system/etc/CrossBreeder");

	run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder");
	run_program("/tmp/busybox","chmod","-R","0755","/system/etc/CrossBreeder");

	#set_perm_recursive(0, 0, 0711, 0444, "/system/etc/CrossBreeder/root");

	#run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder/root");
	#run_program("/tmp/busybox","chmod","-R","0444","/system/etc/CrossBreeder/root");
	#run_program("/tmp/busybox","chmod","0711","/system/etc/CrossBreeder/root");
	#run_program("/tmp/busybox","chmod","0711","/system/etc/CrossBreeder/root/errors");

	run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder/dnrd_root");
	run_program("/tmp/busybox","chmod","-R","0644","/system/etc/CrossBreeder/dnrd_root");
	run_program("/tmp/busybox","chmod","0755","/system/etc/CrossBreeder/dnrd_root");

	#set_perm(0, 0, 0755, "/system/etc/init.d/zzCrossBreeder_initd");
	set_perm(0, 2000, 0755, "/system/xbin/haveged");
	delete("/system/xbin/CB_FileLock");
	set_perm(0, 0, 0755, "/system/etc/CrossBreeder/busybox");
	set_perm(0, 0, 0755, "/system/etc/CrossBreeder/dnrd.10053");
	set_perm(0, 0, 0755, "/system/etc/CrossBreeder/zzCrossBreeder");
	set_perm(0, 0, 0755, "/system/etc/CrossBreeder/zzCHECK_NET_DNS");
	set_perm(0, 0, 0755, "/system/bin/dnsmasq");
	set_perm(0, 0, 0755, "/system/bin/dnsmasq_dhcp");
	#set_perm(0, 0, 0644, "/system/etc/CrossBreeder/dnsmasq-host");
	#set_perm(0, 0, 0644, "/system/etc/resolv.conf");
	set_perm(0, 0, 0644, "/system/etc/hosts");
	set_perm(0, 0, 0644, "/system/etc/CrossBreeder/hosts");
	delete("/system/etc/init.d/00CrossBreeder");
	delete("/system/etc/init.d/zzCrossBreeder");
	delete("/system/etc/init.d/zzCrossBreeder_initd");
	#delete("/system/etc/CrossBreeder/dnsmasq");

	#set_perm(0, 0, 0755, "/system/etc/install-recovery.sh");
	run_program("/tmp/busybox","mv","-f","/system/etc/install-recovery.sh.CBBAK","/system/etc/install-recovery.sh");
	run_program("/tmp/install_init_entries.sh");
	#run_program("/tmp/install_hw_entries.sh");
	#run_program("/sbin/busybox","mv","-f","/system/etc/hw_config.sh.CBBAK","/system/etc/hw_config.sh");
	run_program("/tmp/busybox","mv","-f","/system/bin/debuggerd.CBBAK","/system/bin/debuggerd");
	set_perm(0, 2000, 0755, "/system/bin/debuggerd");
	run_program("/tmp/install_debuggerd.sh");

	run_program("/tmp/busybox","mv","/system/xbin/rngd","/system/xbin/rngd.bak");
	run_program("/tmp/busybox","rm","-fr","/data/rngd.pid");
	run_program("/tmp/busybox","mkdir","/data/rngd.pid/");
	run_program("/tmp/busybox","chown","0:0","/data/rngd.pid");
	run_program("/tmp/busybox","chmod","-R","500","/data/rngd.pid");
	set_perm_recursive(0, 0, 0500, 0500, " /data/rngd.pid/ ");
	run_program("/tmp/busybox","mv","/system/xbin/qrngd","/system/xbin/qrngd.bak");
	run_program("/tmp/busybox","mv","/system/bin/qrngd","/system/bin/qrngd.bak");
	run_program("/tmp/REMOVE_TETHER_BOOST");
	run_program("/tmp/busybox","mv","-f","/system/etc/dnsmasq.conf.CBBAK","/system/etc/dnsmasq.conf");
	run_program("/tmp/busybox","sync");
	#run_program("/tmp/busybox","umount","/system");
	run_program("/tmp/busybox","cp","-f","/tmp/recovery.log","/data/recovery_cb.log");
	run_program("/tmp/busybox","sync");

	run_program("/tmp/busybox","umount","/data");
	#run_program("/tmp/busybox","umount","/cache");
	run_program("/tmp/busybox","umount","/sd-ext");

	# Freeze fix
	sleep (1);
	assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p9", "/system") || ui_print("(system is mounted already)"));
	#assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p12", "/data") || ui_print("(data is mounted already)"));
endif;

set_progress(0.98);


run_program("/sbin/sync");

set_progress(0.99);

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Unmounting partitions");
assert(unmount("/data") || ui_print("(data is unmounted already)"));
assert(unmount("/system") || ui_print("(system is unmounted already)"));

ui_print("===================================");
ui_print("  ArchiDroid Flashed Successfully  ");
ui_print("Please share your experience on XDA");
ui_print("===================================");
#run_program("/sbin/busybox", "cp", "/tmp/recovery.log", "/sdcard/recovery.log");
set_progress(1.0);
