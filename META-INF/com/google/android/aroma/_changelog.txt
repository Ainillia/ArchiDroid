ArchiDroid 2.3.3

- Improved adflash
# Added extsd support. Adflash will now automatically use extsd if ArchiDroid folder found. This means you need to use extsd mode only once (to create ArchiDroid folder)
# Added better git support. Adflash will now automatically use git mode if GitHub repository already exists in folder detected above

- Improved adlinux
# Added extsd support. Adlinux automatically checks if you have extsd and if it's supported. Your extsd needs to be formatted in native linux format such as ext4 to be supported, otherwise internal sd is (and must be) used, because debian requires symlink functionality

- Updated Boeffla Kernel to 2.1-beta8
- Updated Yank Kernel to 1.6i
- Updated Archi's presets for Boeffla Kernel, includes GPU OC/uV
- Updated Temasek Kernel to 231213
- Updated Devil Kernel to 2.2.5b
- Updated XPrivacy to 1.11
- Updated Hacker's Keyboard to 1.37
- Updated App Settings to 1.7.1
- Updated Spirit2 to Dec24
- Updated MX Player to 1.7.22
- Updated Titanium Backup to 6.1.5.1
- Updated Cool Tool to 5.3.3

- Updated sources
* Added QuickSettings toggles (AOSPA)
* Added Full Animation Controls
* Reverted ListView Animations, due to Full Animation Controls
* Reverted AOKP Animations, due to Full Animation Controls

# ArchiDroid Boom-Boom release
# Status: Stage 2 Finished!
* Updated/Changed ROM toolchain from GCC 4.7 to Linaro 4.7 #Note: Linaro/SaberMod 4.8 breaks ART, maybe in future
* Updated/Changed Java 1.6 to Java 1.7 #Note: Breaks with Java 1.8-dev

* TARGET_arm_CFLAGS := -O3(!) -fstrict-aliasing(!) -fno-tree-vectorize -fno-inline-functions -fgcse-after-reload -fno-ipa-cp-clone -fno-vect-cost-model
* TARGET_thumb_CFLAGS := -fstrict-aliasing(!) -fno-unswitch-loops -fno-tree-vectorize -fno-inline-functions -fgcse-after-reload -fno-ipa-cp-clone -fno-vect-cost-model
* TARGET_RELEASE_CFLAGS := -fstrict-aliasing(!) -fno-ipa-cp-clone -fno-vect-cost-model
* TARGET_GLOBAL_CFLAGS := -fstrict-aliasing(!)
* TARGET_GLOBAL_CPPLAGS := -fstrict-aliasing(!)
* $(combo_target)GLOBAL_CFLAGS := -fstrict-aliasing(!)
* $(combo_target)RELEASE_CFLAGS := -O3(!) -fstrict-aliasing(!) -fno-tree-vectorize -fno-inline-functions -fno-unswitch-loops -fgcse-after-reload -fno-ipa-cp-clone -fno-vect-cost-model

[DONE] Update toolchain
[DONE] Update Java
[DONE] Find best generic optimization flags, which won't break the build
[DONE] Add SGS3-specific optimization flags, which won't break the build
[LIVE] Make dozen of stability and performance tests to prove that I wasted whole christmas on nothing
[LIVE] ??? PROFIT!